repeat wait() until game:IsLoaded()
local Table = {3475397644, 5391312853, 3752680052, 4174118306, 3475419198, 3475422608, 4601778915, 4869039553, 5777228223, 3623549100, 3737848045, 3487210751, 4728805070, 5777228223}
if not table.find(Table, game.PlaceId) then return end
repeat
    wait()
until game:IsLoaded()
wait()
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local CoreGui = game:GetService("CoreGui")
local HttpService = game:GetService("HttpService")
local VirtualUser = game:GetService("VirtualUser")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local VirtualInputManager = game:GetService("VirtualInputManager")
local StarterGui = game:GetService("StarterGui")

local Player = Players.LocalPlayer
local wait = task.wait 
local spawn = task.spawn

Player.Idled:connect(
    function()
        VirtualUser:ClickButton2(Vector2.new())
    end
)
repeat
    wait()
until Player.Character


local Settings = {}

local GetConnections = function(A, B)
    for i,v in pairs(getconnections(A[tostring(B)])) do
        v:Fire()
    end 
end 

Player.PlayerGui.NodeGui.BoostFrame.ChildAdded:Connect(
    function(v)
        if v:IsA("Frame") and v:FindFirstChild("ClickButton") then
            wait(0.5)
            GetConnections(v.ClickShadowButton,"MouseButton1Down") 
        end
    end
)


if Player.PlayerGui:FindFirstChild("IntroFrame") then
    local Eh = Player.PlayerGui.IntroGui.IntroFrame.PlayButton
    local VirtualUser = VirtualUser
    Eh.Size = UDim2.new(9e9, 9e9, 9e9, 9e9)
    wait(1)
    VirtualUser:ClickButton1(Vector2.new(9e9, 9e9))
    wait(1)
    Eh.Size = UDim2.new(0, 0, 0, 0)
end
local D = {"üïπÔ∏èPlayer", "Guest"}

local function GetDragons()
    local Target
    for i, v in ipairs(Player.Character.Dragons:GetChildren()) do
        if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
            Target = v
        end
    end
    return Target
end
if game.PlaceId ~= 5777228223 then
    pcall(
        function()
            ReplicatedStorage.Remotes.SpinWheelRemote:InvokeServer()
            ReplicatedStorage.Remotes.ClaimWheelRemote:FireServer()

            StarterGui:SetCoreGuiEnabled(1, true)
            StarterGui:SetCoreGuiEnabled(2, true)
            StarterGui:SetCoreGuiEnabled(3, true)
        end
    )
end
Worlds = {}
local Poop = require(ReplicatedStorage.Storage.Worlds.Worlds)
for i, v in pairs(Poop) do
    table.insert(Worlds, v.Name .. " " .. v.GameId)
end

function Invis()
    local Clone = Player.Character.LowerTorso.Root:Clone()
    Player.Character.LowerTorso.Root:remove()
    Clone.Parent = Player.Character.LowerTorso
end

getgenv().Text = Drawing.new("Text")
Text.Color = Color3.new(0, 1, 1)
Text.Font = 1
Text.Outline = true
Text.OutlineColor = Color3.new(0, 0, 0)
Text.Position = Vector2.new(30, Workspace.CurrentCamera.ViewportSize.Y - 100)
Text.Size = 25
Text.Text = ""
Text.Visible = true

Workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(
    function()
        Text.Position = Vector2.new(20, Workspace.CurrentCamera.ViewportSize.Y - 100)
    end
)

spawn(
    function()
        while wait() do
            Text.Text = Player.Settings.CurrentFish.Value
        end
    end
)

function fuckyou()
    ServerHop()
end

for i, v in pairs(Players:GetPlayers()) do
    if not table.find(D, tostring(v:GetRoleInGroup(2919215))) then
        fuckyou()
    end
end
Players.PlayerAdded:Connect(
    function(v)
        if not table.find(D, tostring(v:GetRoleInGroup(2919215))) then
            fuckyou()
        end
    end
)
local OldNameCall = nil
OldNameCall = hookmetamethod(game, "__newindex", function(...)
    local Self, Key = ...
    local WalkSpeed = Player.Character:FindFirstChildWhichIsA("Humanoid", true).WalkSpeed
    local JumpPower = Player.Character:FindFirstChildWhichIsA("Humanoid", true).JumpPower
    if not checkcaller() then
        if Self == WalkSpeed then
            return WalkSpeed or 16 
        elseif Self == JumpPower then
            return JumpPower or 50
        end
    end
    return OldNameCall(...)
end)

local RF, RE
for i,v in next, getgc() do
    if type(v) == "function" and islclosure(v) then
        if debug.getinfo(v).name == "GetRemoteFunction" then
            RF = v 
        elseif debug.getinfo(v).name == "GetRemoteEvent" then
            RE = v
        end
    end
end

local Healing = {}
for i,v in next, ReplicatedStorage.Storage.Items.Items.Healing:GetChildren() do
    if v:IsA("ModuleScript") then
        local A = require(v)
        for i,v in next, A do
            table.insert(Healing, i)
        end
    end
end

local foods = {}
for i, v in pairs(ReplicatedStorage.Storage.Items.Items.Food:GetChildren()) do
    if v.ClassName == "ModuleScript" then
        g = require(v)
        for i, v in pairs(g) do
            table.insert(foods, i)
        end
    end
end
local list = {}
for i, v in pairs(ReplicatedStorage.Storage.Items.Items.Food:GetChildren()) do
    if v.ClassName == "ModuleScript" then
        f = require(v)
        for i, v in pairs(f) do
            table.insert(list, i)
        end
    end
end
local Dragons = {}
for i, v in pairs(Player.Data.Dragons:GetChildren()) do
    if v:FindFirstChild("Age") then
        table.insert(Dragons, v.Value)
    end
end
local ss1 = {}
for i, v in pairs(ReplicatedStorage.Storage.Items.Items.Eggs:GetChildren()) do
          if v.ClassName == "ModuleScript" then
        f = require(v)
        for i,v in pairs(f) do
        table.insert(ss1, i)
        end
    end
end

local Noclip = function()
    if Player.Character and Player.Character:FindFirstChildWhichIsA("Humanoid") then
        for i,v in next, Player.Character:GetChildren() do
            if v:IsA("BasePart") then
                v.CanCollide = false
                v.Velocity = Vector3.new(0,0,0)
            end
        end
    end 
end 
local Tween = function(A, B, C)
    if A and B then
        local Time = (B.Position - A.Position).Magnitude / C 
        local Info = TweenInfo.new(Time, Enum.EasingStyle.Linear)
        local Tween = TweenService:Create(A, Info, {CFrame = CFrame.new(B.Position)})
        Tween:Play()
        Tween.Completed:Wait()
    end
    return A, B, C
end
local deku1 = {"SolsticeFlares", "SolsticeBoxes"}
local deku = {"Food", "Magic", "Resources"}

local Lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/1201for/V.G_Moblie/main/Files/Gui",true))()
local Win = Lib:CreateWindow("V.G Hub",2,nil, nil)
local Tab = Win:CreateTab("V.G Hub",function() warn(i) end)
local Tab2 = Win:CreateTab("Main",function() warn(i) end)
if game.PlaceId == 3475397644 then

for i, v in pairs(Workspace.Interactions:GetDescendants()) do
    if v:IsA("TextLabel") and v.Name:match("Player")  then
        if v.Text == Player.PlayerGui.WorkspaceGui[Player.Name .. "_DisplayGui"].ContainerFrame.NameLabel.Text then
             Player.Character.HumanoidRootPart.CFrame = v.Parent.Parent.Parent.TeleportPart.CFrame
        end
    end
end

Tab2:CreateButton("Clear Plot",function()
    Workspace.Interactions.Plots.Plots[Player.Name.."_Plot"].DeleteAllRemote:FireServer()
end)
Tab2:CreateButton("Clear Plot",function()
    for i, v in pairs(Workspace.Interactions:GetDescendants()) do
        if v:IsA("TextLabel") and v.Name:match("Player")  then
            if  v.Text == Player.PlayerGui.WorkspaceGui[Player.Name .. "_DisplayGui"].ContainerFrame.NameLabel.Text then
                firetouchinterest(Player.Character.HumanoidRootPart, v.Parent.Parent.Parent.TeleportPart, 0)
            end
        end
    end
end)

Tab2:CreateButton("Sell All Foods",function()
    for i, v in pairs(Player.Data.Resources:GetChildren()) do
        if table.find(foods,v.Name) and v.Value ~= 0 then wait(0.5)
            RE("SellItemRemote"):FireServer({["Amount"] = v.Value, ["ItemName"] = v.Name})
        end
    end
end)

Tab:CreateToggle("Auto Alchemy",false,function(t)
Alchemy = t
    spawn(function()
        while wait() and Alchemy do
            pcall(function()
                for i, v in pairs(Player.Data.Resources:GetChildren()) do
                    if v.Name == AlchemyFoods and v.Value ~= 0 then wait(5)
                        RF("RecycleResourceRemote"):InvokeServer({[AlchemyFoods] = 1})
                    end
                end
            end)
        end
    end)
end)

Tab:CreateDropdown("Alchemy Foods", foods,false,function(c,f)
    AlchemyFoods = c
end)

end

Tab:CreateToggle("Auto Collect",false,function(t)
AutoCollect = t
    RunService.Stepped:connect(function()
        if AutoCollect then
            pcall(function()
                Noclip()
            end)
        end
    end)
    spawn(function()
        while AutoCollect do wait()
            pcall(function()
                for i, v in pairs(Workspace.Interactions.Nodes.Harvest[CollectionItem].ActiveNodes:GetChildren()) do
                    if v:IsA("Model") and v:FindFirstChildWhichIsA("BasePart") and AutoCollect then
                        Player.Character.HumanoidRootPart.CFrame =  v:FindFirstChildWhichIsA("BasePart").CFrame * CFrame.new(40, 5, 0)
                        wait(1)
                        Tween(Player.Character:FindFirstChild("HumanoidRootPart"), v:FindFirstChildWhichIsA("BasePart").CFrame, 16)
                        wait(1)
                        game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
                        wait(10)
                    end
                end
           end)
        end
    end)
end)

Tab:CreateDropdown("Collectable foods", deku,false,function(c,f)
    CollectionItem = c
end)
Tab:CreateToggle("Auto Egg",false,function(t)
AutoEgg = t
    RunService.Stepped:connect(function()
        if AutoEgg then
            pcall(function()
                Noclip()
            end)
        end
    end)
    spawn(function()
        while AutoEgg do wait()
            pcall(function()
                for i, v in pairs(Workspace.Interactions.Nodes.Harvest.Eggs.ActiveNodes:GetChildren()) do
                    if v:IsA("Model") and v:FindFirstChildWhichIsA("BasePart") then
                        Player.Character.HumanoidRootPart.CFrame = v:FindFirstChildWhichIsA("BasePart").CFrame * CFrame.new(40, -3, 0)
                        wait(1)
                        Tween(Player.Character:FindFirstChild("HumanoidRootPart"), v:FindFirstChildWhichIsA("BasePart").CFrame, 16)
                        wait(1)
                        game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
                        wait(10)
                    end
                end
            end)
        end
    end)
end)
Tab:CreateToggle("Auto Fish",false,function(t)
AutoFish = t
    spawn(function()
        while AutoFish do wait()
            pcall(function()
                local Fish = require(ReplicatedStorage["_replicationFolder"].FishingClient)
                local StartCasting = Fish.StartCasting
                local Click = Fish.Click
                StartCasting(Fish, StartCasting)
                if Fish.Snagged == true then
                    Fish.ReelSignal:Fire()
                    if Player.PlayerGui.FishingGui.ContainerFrame.ReelingFrame.BarLabel.InnerLabel.PointerLabel.Position.X.Scale <= Player.PlayerGui.FishingGui.ContainerFrame.ReelingFrame.BarLabel.InnerLabel.SafeBarLabel.Position.X.Scale + .02 then
                        Click(Fish, Fish.Click)
                    end
                end
            end)
        end
    end)
end)
Tab2:CreateButton("Equip Dragon",function()
    for i,v in pairs(Player.Data.Dragons:GetDescendants()) do
        if  v.ClassName == 'StringValue' and  v.Value == DragonW and v:FindFirstChild("Stats") then 
            RF("EquipDragonRemote"):InvokeServer(v.Name)
            break
        end     
    end 
end)
Tab:CreateDropdown("Dragons To Equip", Dragons,false,function(c,f)
    DragonW = c
end)
Tab2:CreateButton("Remove Dragons",function()
    for i, v in pairs(Player.Character.Dragons:GetDescendants()) do
        if v:IsA("Model") and v:FindFirstChild("ID") then
            RF("UnequipDragonRemote"):InvokeServer(v.Name)
        end
    end
end)
Tab:CreateToggle("Auto Feed Dragons",false,function(t)
AutoFeed = t
    spawn(function()
        while AutoFeed do wait()
            if AutoFeed then
                pcall(function()
                    for i, v in pairs(Player.Character.Dragons:GetChildren()) do
                        if v.ClassName == "Model" and v:FindFirstChild("ID") then wait(5)
                            RF("FeedDragonRemote"):InvokeServer(v.Name, {["Amount"] = 1, ["ItemName"] = Num})
                        end
                    end
                end)
            end
        end
    end)
end)
Tab:CreateDropdown("Foods To Feed Dragons", foods,false,function(c,f)
    Num = c
end)
Tab:CreateToggle("Auto Grow",false,function(t)
AutoGrow = t
    spawn(function()
        while AutoGrow do wait()
            if AutoGrow then
                pcall(function()
                    for i, v in pairs(Player.Character.Dragons:GetDescendants()) do
                        if v.ClassName == "Model" and v:FindFirstChild("ID") then wait(5)
                            RF("GrowDragonRemote"):InvokeServer(tostring(v.Name))
                        end
                    end
                end)
            end
        end
    end)
end)
Tab:CreateToggle("Auto Heal",false,function(t)
AutoHeal = t
    spawn(function()
        while AutoHeal do wait(0.1)
            if AutoHeal then
                pcall(function()
                    for i, v in pairs(Player.Character.Dragons:GetChildren()) do
                        if v.ClassName == "Model" and v:FindFirstChild("ID") then wait(1)
                            RF("HealDragonRemote"):InvokeServer(tostring(v.Name),HealingItem)
                        end
                    end
                end)
            end
        end
    end)
end)
Tab:CreateDropdown("Foods To Feed Dragons", Healing,false,function(c,f)
    HealingItem = c
end)
Tab2:CreateButton("Teleport To Selected World",function()
    for i,v in pairs(Poop) do
        if string.find(Type,v.GameId) then
            RF("WorldTeleportRemote"):InvokeServer(v.GameId,{})
        end 
    end 
end)
Tab:CreateDropdown("Worlds", Worlds,false,function(c,f)
    Type = c
end)


Tab:CreateToggle("Player Loop WalkSpeed/JumpPower",false,function(t)
    Toggle = t
    Stepped:Connect(function()
        pcall(function()
            if Toggle then
                Player.Character:FindFirstChildWhichIsA("Humanoid").WalkSpeed = WalkSpeed
                Player.Character:FindFirstChildWhichIsA("Humanoid").JumpPower = JumpPower
            end 
        end)
    end)
end)

Tab:CreateSlider("WalkSpeed ",16,500,16,function(v)
    WalkSpeed = v
end)
Tab:CreateSlider("JumpPower ",16,500,16,function(v)
    JumpPower = v
end)

Tab:CreateToggle("Infinite Jump",false,function(t)
InfiniteJump = t
    UserInputService.JumpRequest:connect(function()
        if InfiniteJump then
            Player.Character:FindFirstChildWhichIsA("Humanoid"):ChangeState("Jumping")
        end
    end)
end)

Tab:CreateButton("FPS Booster",function()
    for i,v in pairs(game:GetDescendants()) do 
        if v:IsA("Texture") then
            v.Texture = ""
        elseif v:IsA("BasePart") then
            v.Material = Enum.Material.Wood
        end 
    end 
end)

Tab:CreateButton("ServerHop",function()
    ServerHop()
end)

Tab:CreateButton("Rejoin",function()
    Rejoin()
end)
